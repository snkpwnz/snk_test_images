{"bomFormat": "CycloneDX", "specVersion": "1.4", "serialNumber": "urn:uuid:7a51b725-e610-4618-91d9-422877ebd08d", "version": 1, "metadata": {"timestamp": "2024-06-13T14:17:46.405711+00:00", "tools": [{"vendor": "Cybellum", "name": "Cybellum", "version": "3.1"}], "authors": [{"name": "sysadmin"}], "component": {"name": "sbom_only", "version": "1", "bom-ref": "d0b3774c-0b67-4194-a884-501033cfa026", "type": "application"}}, "components": [{"type": "operating-system", "name": "qnx", "version": "6.6.0", "bom-ref": "49b04c8e-1751-484c-bc00-32803d8d96d7", "properties": [{"name": "package_id", "value": "qnx"}, {"name": "package_name", "value": "qnx"}, {"name": "version_name", "value": "6.6.0"}, {"name": "package_metadata", "value": "{'version_name_candidates': ['6.6.0']}"}, {"name": "package_type", "value": "['OS']"}, {"name": "major_single_package_type", "value": "Operating-System"}, {"name": "component_usage", "value": "static"}, {"name": "score", "value": "1.0"}, {"name": "usage_risk", "value": "no_risk"}, {"name": "bom_class", "value": "software"}, {"name": "vendor", "value": "blackberry"}, {"name": "identifiers", "value": "['os_identifier']"}, {"name": "cpes", "value": "cpe:2.3:o:blackberry:qnx_neutrino_rtos:6.6.0:*:*:*:*:*:*:*,cpe:2.3:a:blackberry:qnx_software_development_platform:6.6.0:*:*:*:*:*:*:*"}], "supplier": {"name": "blackberry"}, "cpe": "cpe:2.3:a:blackberry:qnx_software_development_platform:6.6.0:*:*:*:*:*:*:*", "purl": "pkg:generic/qnx@6.6.0", "licenses": []}, {"type": "library", "name": "zlib", "version": "1.2.5", "bom-ref": "7fa3e334-36f4-410d-a28f-8a0094e767c4", "properties": [{"name": "package_id", "value": "zlib"}, {"name": "version_id", "value": "zlib1.2.5"}, {"name": "package_name", "value": "zlib"}, {"name": "version_name", "value": "1.2.5"}, {"name": "package_metadata", "value": "{'version_name_candidates': ['1.2.5']}"}, {"name": "package_type", "value": "['APPLICATION']"}, {"name": "major_single_package_type", "value": "Application"}, {"name": "component_usage", "value": "static"}, {"name": "score", "value": "2.5733429826450034"}, {"name": "usage_risk", "value": "no_risk"}, {"name": "bom_class", "value": "software"}, {"name": "vendor", "value": "gnu"}, {"name": "identifiers", "value": "['bat_identifier', 'strings_identifier']"}, {"name": "cpes", "value": "cpe:2.3:a:zlib:zlib:1.2.5:*:*:*:*:*:*:*"}], "supplier": {"name": "gnu"}, "cpe": "cpe:2.3:a:zlib:zlib:1.2.5:*:*:*:*:*:*:*", "purl": "pkg:generic/zlib@1.2.5", "licenses": [{"license": {"id": "Zlib", "text": {"contentType": "text/plain", "encoding": "base64", "content": "ICBUaGlzIHNvZnR3YXJlIGlzIHByb3ZpZGVkICdhcy1pcycsIHdpdGhvdXQgYW55IGV4cHJlc3Mgb3IgaW1wbGllZAogIHdhcnJhbnR5LiAgSW4gbm8gZXZlbnQgd2lsbCB0aGUgYXV0aG9ycyBiZSBoZWxkIGxpYWJsZSBmb3IgYW55IGRhbWFnZXMKICBhcmlzaW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIHNvZnR3YXJlLgoKICBQZXJtaXNzaW9uIGlzIGdyYW50ZWQgdG8gYW55b25lIHRvIHVzZSB0aGlzIHNvZnR3YXJlIGZvciBhbnkgcHVycG9zZSwKICBpbmNsdWRpbmcgY29tbWVyY2lhbCBhcHBsaWNhdGlvbnMsIGFuZCB0byBhbHRlciBpdCBhbmQgcmVkaXN0cmlidXRlIGl0CiAgZnJlZWx5LCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgcmVzdHJpY3Rpb25zOgoKICAxLiBUaGUgb3JpZ2luIG9mIHRoaXMgc29mdHdhcmUgbXVzdCBub3QgYmUgbWlzcmVwcmVzZW50ZWQ7IHlvdSBtdXN0IG5vdAogICAgIGNsYWltIHRoYXQgeW91IHdyb3RlIHRoZSBvcmlnaW5hbCBzb2Z0d2FyZS4gSWYgeW91IHVzZSB0aGlzIHNvZnR3YXJlCiAgICAgaW4gYSBwcm9kdWN0LCBhbiBhY2tub3dsZWRnbWVudCBpbiB0aGUgcHJvZHVjdCBkb2N1bWVudGF0aW9uIHdvdWxkIGJlCiAgICAgYXBwcmVjaWF0ZWQgYnV0IGlzIG5vdCByZXF1aXJlZC4KICAyLiBBbHRlcmVkIHNvdXJjZSB2ZXJzaW9ucyBtdXN0IGJlIHBsYWlubHkgbWFya2VkIGFzIHN1Y2gsIGFuZCBtdXN0IG5vdCBiZQogICAgIG1pc3JlcHJlc2VudGVkIGFzIGJlaW5nIHRoZSBvcmlnaW5hbCBzb2Z0d2FyZS4KICAzLiBUaGlzIG5vdGljZSBtYXkgbm90IGJlIHJlbW92ZWQgb3IgYWx0ZXJlZCBmcm9tIGFueSBzb3VyY2UgZGlzdHJpYnV0aW9uLg=="}}}]}, {"type": "library", "name": "bash", "version": "2.05a", "bom-ref": "dd4a34a0-c368-49de-8ddc-8620fd9db5b2", "properties": [{"name": "package_id", "value": "bash"}, {"name": "package_name", "value": "bash"}, {"name": "version_name", "value": "2.05a"}, {"name": "package_metadata", "value": "{'version_name_candidates': ['2.02', '2.02.1', '2.03', '2.04', '2.05a', '2.05b', '2.05', '3.0', '3.0.16', '3.1', '3.2', '3.2.48', '3.2.57', '4.0', '4.0.38', '4.1', '4.1.11', '4.2', '4.2.53', '4.3', '4.3.30', '4.4', '4.4.12', '4.4.18', '5.0', '5.1', '5.1.8', '5.1.12', '5.1.16', '5.2', '5.2.9', '5.2.15']}"}, {"name": "package_type", "value": "['APPLICATION']"}, {"name": "major_single_package_type", "value": "Application"}, {"name": "component_usage", "value": "static"}, {"name": "score", "value": "0.6010772575979879"}, {"name": "usage_risk", "value": "high"}, {"name": "bom_class", "value": "software"}, {"name": "vendor", "value": "gnu"}, {"name": "identifiers", "value": "['bat_identifier']"}, {"name": "cpes", "value": "cpe:2.3:a:gnu:bash:2.05a:*:*:*:*:*:*:*"}], "supplier": {"name": "gnu"}, "cpe": "cpe:2.3:a:gnu:bash:2.05a:*:*:*:*:*:*:*", "purl": "pkg:generic/bash@2.05a", "licenses": [{"license": {"id": "GPL-3.0", "text": {"contentType": "text/plain", "encoding": "base64", "content": ""}}}]}], "dependencies": [{"ref": "49b04c8e-1751-484c-bc00-32803d8d96d7", "dependsOn": []}, {"ref": "7fa3e334-36f4-410d-a28f-8a0094e767c4", "dependsOn": []}, {"ref": "dd4a34a0-c368-49de-8ddc-8620fd9db5b2", "dependsOn": []}, {"ref": "d0b3774c-0b67-4194-a884-501033cfa026", "dependsOn": ["49b04c8e-1751-484c-bc00-32803d8d96d7", "7fa3e334-36f4-410d-a28f-8a0094e767c4", "dd4a34a0-c368-49de-8ddc-8620fd9db5b2"]}]}